{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Node Pool Profile Count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes node VMs"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Master Pool Profile Count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes master VMs"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of Azure Stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.12",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    },
    "aksEngineBaseURL": {
      "type": "string",
      "defaultValue": "https://github.com/Azure/aks-engine/releases/download",
      "metadata": {
        "description": "The beginning of the URL for downloading the AKS Engine binary"
      }
    },
    "aksEngineReleaseVersion": {
      "type": "string",
      "defaultValue": "v0.38.5",
      "metadata": {
        "description": "The version of AKS Engine to download"
      }
    },
    "galleryRepository": {
      "type": "string",
      "defaultValue": "msazurestackworkloads/azurestack-gallery",
      "metadata": {
        "description": "Marketplace item repository"
      }
    },
    "galleryBranch": {
      "type": "string",
      "defaultValue": "test",
      "metadata": {
        "description": "Marketplace item branch"
      }
    },
    "clusterDefinitionFileName": {
      "type": "string",
      "defaultValue": "clusterDefinition.json",
      "metadata": {
        "description": "The name of the file containing the cluster definition"
      }
    },
    "kubernetesImageBase": {
      "type": "string",
      "defaultValue": "mcr.microsoft.com/k8s/azurestack/core/",
      "metadata": {
        "description": "The base for Kubernetes images"
      }
    },
    "customVnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the custom vnet"
      }
    },
    "masterSubnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the master subnet"
      }
    },
    "agentSubnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the agent subnet"
      }
    },
    "firstConsecutiveStaticIP": {
      "type": "string",
      "defaultValue": "10.100.0.5",
      "metadata": {
        "description": "First Consective Static IP"
      }
    },
    "networkPlugin": {
      "defaultValue": "flannel",
      "allowedValues": [
        "flannel",
        "azure",
        "kubenet"
      ],
      "metadata": {
        "description": "Network plugin which will deployed in Kubernetes cluster"
      },
      "type": "string"
    },
    "availabilityProfile": {
      "defaultValue": "AvailabilitySet",
      "allowedValues": [
        "AvailabilitySet",
        "VirtualMachineScaleSets"
      ],
      "metadata": {
        "description": "Availability profile that nodes in the Kubernetes cluster will be deployed with"
      },
      "type": "string"
    },
    "windowsAgentPoolProfileCount": {
      "defaultValue": "0",      
      "metadata": {
        "description": "Kubernetes windows node pool profile count"
      },
      "type": "string"
    },
    "windowsAgentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes windows node VMs"
      },
      "type": "string"
    },
    "windowsAdminUsername": {
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Windows Virtual Machines that are part of the Kubernetes cluster."
      },
      "type": "string"
    },
    "windowsAdminPassword": {
      "defaultValue": "MN&d?2,@~j'c3;T+",
      "metadata": {
        "description": "Password for the Windows Virtual Machines that are part of the Kubernetes cluster."
      },
      "type": "securestring"
    },
    "windowsPackageBaseURL": {
      "defaultValue": "",
      "metadata": {
        "description": "URL path from where windows binaries will be downloaded."
      },
      "type": "string"
    },
    "windowsPackageName": {
      "defaultValue": "",
      "metadata": {
        "description": "Name of the windows package which will be installed."
      },
      "type": "securestring"
    },
    "nodeDistro": {
      "defaultValue": "ubuntu",
      "allowedValues": [
        "ubuntu",
        "aks-ubuntu-16.04"
      ],
      "metadata": {
        "description": "Node distro to be used to deploy Kubernetes on Azure Stack."
      },
      "type": "string"
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' WINDOWS_PACKAGE_NAME=','\"',parameters('windowsPackageName'),'\"' ,' WINDOWS_PACKAGE_URL=','\"',parameters('windowsPackageBaseURL'),'\"' ,' WINDOWS_AGENT_COUNT=','\"',parameters('windowsAgentPoolProfileCount'),'\"' ,' WINDOWS_AGENT_SIZE=','\"',parameters('windowsAgentPoolProfileVMSize'),'\"',' WINDOWS_ADMIN_USERNAME=','\"',parameters('windowsAdminUsername'),'\"',' WINDOWS_ADMIN_PASSWORD=','\"',parameters('windowsAdminPassword'),'\"',' NETWORK_PLUGIN=','\"',parameters('networkPlugin'),'\"',' AVAILABILITY_PROFILE=','\"',parameters('availabilityProfile'),'\"',' FIRST_CONSECUTIVE_STATIC_IP=','\"',parameters('firstConsecutiveStaticIP'),'\"',' AGENT_SUBNET_NAME=','\"',parameters('agentSubnetName'),'\"',' MASTER_SUBNET_NAME=','\"',parameters('masterSubnetName'),'\"',' CUSTOM_VNET_NAME=','\"',parameters('customVnetName'),'\"',' NODE_DISTRO=','\"',parameters('nodeDistro'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"',' AKSE_BASE_URL=','\"',parameters('aksEngineBaseURL'), '\"', ' AKSE_RELEASE_VERSION=','\"',parameters('aksEngineReleaseVersion'),'\"',' GALLERY_REPO=','\"',parameters('galleryRepository'),'\"',' GALLERY_BRANCH=','\"',parameters('galleryBranch'),'\"',' DEFINITION_TEMPLATE_NAME=','\"',parameters('clusterDefinitionFileName'),'\"',' K8S_IMAGE_BASE=','\"',parameters('kubernetesImageBase'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}
