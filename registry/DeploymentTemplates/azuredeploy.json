{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUsername": {
            "type": "string",
            "defaultValue": "azureuser",
            "metadata": {
                "description": "The linux user name."
            }
        },
        "adminPublicKey": {
            "type": "string",
            "metadata": {
                "description": "User's RSA public key."
            }
        },
        "virtualMachineSize": {
            "type": "string",
            "defaultValue": "Standard_F8s_v2",
            "metadata": {
                "description": "The VM size."
            }
        },
        "virtualMachinePublisher": {
            "type": "string",
            "defaultValue": "Canonical",
            "metadata": {
                "description": "The guest OS image publisher."
            }
        },
        "virtualMachineOffer": {
            "type": "string",
            "defaultValue": "UbuntuServer",
            "metadata": {
                "description": "The guest OS image offer."
            }
        },
        "virtualMachineSku": {
            "type": "string",
            "defaultValue": "16.04-LTS",
            "metadata": {
                "description": "The guest OS image SKU."
            }
        },
        "virtualMachineVersion": {
            "type": "string",
            "defaultValue": "latest",
            "metadata": {
                "description": "The guest OS image version."
            }
        },
        "pipName": {
            "type": "string",
            "metadata": {
                "description": "The public IP resource name."
            }
        },
        "pipDomainNameLabel": {
            "type": "string",
            "metadata": {
                "description": "The public IP DNS label."
            }
        },
        "pipAllocationMethod": {
            "type": "string",
            "defaultValue": "dynamic",
            "metadata": {
                "description": "The public IP allocation method."
            }
        },
        "storageAccountResourceId": {
            "type": "string",
            "metadata": {
                "description": "An already existing storage account resource identifier."
            }
        },
        "storageAccountContainer": {
            "type": "string",
            "metadata": {
                "description": "An already existing storage account container name."
            }
        },
        "pfxKeyVaultResourceId": {
            "type": "string",
            "metadata": {
                "description": "The Key Vault resource identifier."
            }
        },
        "pfxKeyVaultSecretUrl": {
            "type": "string",
            "metadata": {
                "description": "Absolute URL to the Key Vault secret that stores the pfx certificate."
            }
        },
        "pfxThumbprint": {
            "type": "string",
            "metadata": {
                "description": "The certificate thumbprint."
            }
        },
        "registryTag": {
            "type": "string",
            "defaultValue": "2.7.1",
            "metadata": {
                "description": "Docker registry version (image tag)."
            }
        },
        "registryReplicas": {
            "type": "string",
            "defaultValue": "20",
            "metadata": {
                "description": "Docker registry replicas."
            }
        },
        "servicePrincipalClientId": {
            "type": "securestring",
            "metadata": {
                "description": "Client ID with access to list and get secrets from the credentials Key Vault instance"
            }
        },
        "servicePrincipalClientSecret": {
            "type": "securestring",
            "metadata": {
                "description": "Secret of the client with access to list and get secrets from the credentials Key Vault instance"
            }
        }
    },
    "variables": {
        "rgname": "[resourceGroup().name]",
        "nsgName": "[concat(variables('rgname'), '-nsg')]",
        "nicName": "[concat(variables('rgname'), '-nic')]",
        "vnetName": "[concat(variables('rgname'), '-vnet')]",
        "vnetId": "[resourceId('Microsoft.Network/virtualNetworks',variables('vnetName'))]",
        "subnetRef": "[concat(variables('vnetId'), '/subnets/default')]",
        "tenantId": "[subscription().tenantId]",
        "location": "[resourceGroup().location]",
        "provisionScriptParameters": "[concat('ADMIN_USER_NAME=', parameters('adminUsername'),' SA_RESOURCE_ID=', parameters('storageAccountResourceId'),' SA_CONTAINER=', parameters('storageAccountContainer'),' KV_RESOURCE_ID=', parameters('pfxKeyVaultResourceId'),' CERT_THUMBPRINT=', parameters('pfxThumbprint'),' PIP_LABEL=', parameters('pipDomainNameLabel'),' REGISTRY_TAG=', parameters('registryTag'),' SPN_CLIENT_ID=',parameters('servicePrincipalClientId'),' SPN_CLIENT_SECRET=',parameters('servicePrincipalClientSecret'),' REGISTRY_REPLICAS=', parameters('registryReplicas'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(variables('rgname'),'-vm')]",
            "apiVersion": "2017-03-30",
            "location": "[resourceGroup().location]",
            "properties": {
                "osProfile": {
                    "computerName": "[concat(variables('rgname'),'-vm')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/registry/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": true,
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                                    "keyData": "[parameters('adminPublicKey')]"
                                }
                            ]
                        }
                    },
                    "secrets": [
                        {
                            "sourceVault": {
                                "id": "[parameters('pfxKeyVaultResourceId')]"
                            },
                            "vaultCertificates": [
                                {
                                    "certificateUrl": "[parameters('pfxKeyVaultSecretUrl')]"
                                }
                            ]
                        }
                    ]
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSize')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[parameters('virtualMachinePublisher')]",
                        "offer": "[parameters('virtualMachineOffer')]",
                        "sku": "[parameters('virtualMachineSku')]",
                        "version": "[parameters('virtualMachineVersion')]"
                    },
                    "osDisk": {
                        "createOption": "FromImage",
                        "diskSizeGB": 30,
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS"
                        }
                    },
                    "dataDisks": []
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
                        }
                    ]
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/',variables('nicName'))]"
            ]
        },
        {
            "apiVersion": "2017-03-30",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/',variables('rgname'),'-vm')]"
            ],
            "location": "[resourceGroup().location]",
            "name": "[concat(variables('rgname'),'-vm/cse')]",
            "properties": {
                "protectedSettings": {
                    "commandToExecute": "[concat(variables('provisionScriptParameters'),' LOCATION=',variables('location'),' TENANT_ID=',variables('tenantId'),' PIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',parameters('pipName')),'2017-10-01').dnsSettings.fqdn,'\"',' /opt/azure/registry/script.sh >> /var/log/azure/docker-registry.log 2>&1')]"
                },
                "publisher": "Microsoft.Azure.Extensions",
                "settings": {},
                "type": "CustomScript",
                "typeHandlerVersion": "2.0",
                "autoUpgradeMinorVersion": true
            },
            "type": "Microsoft.Compute/virtualMachines/extensions"
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[concat(variables('rgname'),'-vnet')]",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "172.16.0.0/24"
                    ]
                },
                "subnets": [
                    {
                        "name": "default",
                        "properties": {
                            "addressPrefix": "172.16.0.0/24"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('nicName')]",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIpAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIpAddresses',parameters('pipName'))]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('nsgName'))]"
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/',variables('rgname'),'-vnet')]",
                "[concat('Microsoft.Network/publicIpAddresses/',parameters('pipName'))]",
                "[concat('Microsoft.Network/networkSecurityGroups/',variables('nsgName'))]"
            ]
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "sku": {
                "name": "Basic"
            },
            "name": "[parameters('pipName')]",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIpAllocationMethod": "[parameters('pipAllocationMethod')]",
                "dnsSettings": {
                    "domainNameLabel": "[parameters('pipDomainNameLabel')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('nsgName')]",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "HTTPS",
                        "properties": {
                            "priority": 320,
                            "protocol": "Tcp",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceApplicationSecurityGroups": [],
                            "destinationApplicationSecurityGroups": [],
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "443"
                        }
                    }
                ]
            }
        }
    ],
    "outputs": {
        "adminUsername": {
            "type": "string",
            "value": "[parameters('adminUsername')]"
        }
    }
}